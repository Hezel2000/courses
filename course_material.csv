Titel,Kapitel,Unterkapitel,Schlagworte,Laufzeit,Vorlesung ipynb,Übungen ipynb,Lösungen ipynb,Beschreibung,Vimeo,Youtube,,
Installation,1,1,none,03:05,none,none,none,"Als erstes installieren wir Jupyter Notebooks. Dazu verwenden wir Anaconda, welches wir über: https://www.anaconda.com/products/individual erhalten.",https://vimeo.com/546101347,https://youtu.be/MK1jGJBydUM,,
Padlet zur Lern-Dokumentation,1,2,none,03:16,none,none,none,"Für die Programmierung mit Jupyter Notebooks, werden wir verschiedenste Elemente kennen lernen. Diese wollen wir mit dem online Werkzeug ›Padlet‹ strukturieren und dokumentieren. Lege dazu ein eigenes Padlet unter padlet.com an.",https://vimeo.com/589864403,https://youtu.be/hDVtq86ZyT0,,
"Anlegen der Ordnerstruktur
",1,3,none,02:14,none,none,none,"Der Ordner mit den Jupyter Notebook Dateien (.ipynb) sollte möglichst nahe dem Root-Verzeichnis sein, dann kann schneller auf die Daten zugegriffen werden. Lege in diesem Ordner die 3 folgenden, zusätzlichen Ordner an: ›Data‹, ›Output‹, ›Module‹. Es wird im Laufe des Kurses klar, wofür wir diese Brauchen. In den ersten ›Data‹ kannst Du von OLAT die Datei ›Atomic Masses.xlsx‹ kopieren.",https://vimeo.com/590996917,https://youtu.be/1uPL4Wi_djk,,
"Simple Calculation and print( )
",1,4,none,03:07,none,none,none,"Wir beginnen mit einer einfachen Rechnung und einem ersten Befehl (›print( )‹), um die Funktionsweise eines Jupyter Notebooks kennen zu lernen. Achte dabei vor allem auch auf sinnvolle, Leerzeichen, Leerzeilen – und vor allem auf eine gute Beschreibung und Kommentierung.",https://vimeo.com/589858557,https://youtu.be/xn-1s7TRkIk,,
"Basics- Variables, Operators, Indents, Lists & Comments
",2,1,"operators; variables; print(); extract with [ ]
",10:56,Basics_Variables_Operators_Indents_Lists_Comments.ipynb,Exercise_Basics_Variables_Operators_Indents_Lists_Comments.ipynb,Solution_Basics_Variables_Operators_Indents_Lists_Comments.ipynb,"Wir starten mit ein paar grundsätzlichen Dingen, welche noch nicht wirklich etwas mit dem Ziel dieser Einheit zu tun haben, aber gut zu wissen sind, bevor es richtig los geht.",https://vimeo.com/599697548,https://youtu.be/SwjXloggvRM,,
"Basics- Point Notation, Methods & Functions
",2,2,"functions: sum(), len(), round(), sorted(), range(), list()
methods: append(), count(), clear(), sort()",09:36,Basics_Point_Notation_Methods_Functions.ipynb,Exercise_Basics_Point_Notation_Methods_Functions.ipynb,Solution_Basics_Point_Notation_Methods_Functions.ipynb,"Wir machen mit einem Nachschlag Basics weiter – wobei, diesmal sind das schon Dinge, welche konkret für das Nachfolgende wichtig sind.",https://vimeo.com/599697126,https://youtu.be/8MyvQP42sLY,,
"Command- for loop
",2,3,none,05:43,Command_for_loop.ipynb,Exercise_Command_for_loop.ipynb,Solution_Command_for_loop.ipynb,"Wirklich sehr häufig muss ein und dieselbe Rechnung zig-Mal durchgeführt werden. Zum Beispiel wenn für 500 Proben die Oxide- in Element-Gew% umgerechnet werden müssen. Man bewegt sich also in einer wahren Schleife mit der immer gleich Rechnung. Schmerzfreie Computer führen solchen Schleifen in atemberaubender Geschwindigkeit, und mit nur wenig Befehlszeilen durch. Daher sind Schleifen sehr wichtig und eine Kernfunktion der Programmierung. Deshalb schauen wir uns nun an, wie diese funktionieren und wir diese anwenden.",https://vimeo.com/599696793,https://youtu.be/0TUoVg7Du-w,,
"Command- def, return, import & making own commands and importing these",2,4,none,09:27,Command_def_return_import_making own_commands_and_importing_these.ipynb,Exercise_Command_def_return_import_making_own_commands_and_importing_these.ipynb,Solution_Command_def_return_import_making_own_commands_and_importing_these.ipynb,"Und schon jetzt wird es wirklich cool: wir basteln uns einen eigenen Befehl, und legen den in einer Datei ab. Diese Datei können wir fortan importieren wenn wir den Befehl brauchen, und diesen dann einfach anwenden. – Die Datei lässt sich ab sofort um immer mehr Befehle erweitern, welche in der Mineralogie nützlich sind: Aufschmelzung, Mischung, Umrechnungen, Formelberechnung, Isotopen-Fraktionierungen, Gesteinsalter, Thermobarometrie, jegliche Modelle – und vieles mehr. ",https://vimeo.com/599696324,https://www.youtube.com/watch?v=x78T8dn8bW4,,
Task - Building a ratio mixing command,2,5,none,03:35,none,none,Solution_Task_Building_a_ratio_mixing_command.ipynb,"Zum Abschluss sollst Du Deinen ersten, eigenen Befehl schreiben. Natürlich gleich einen nützlichen. ",https://vimeo.com/600431724,https://youtu.be/E5GU7NLoKBI,,
Was  Datensätze sind und wie diese aufgebaut sein müssen ,3,1,none,06:09,none,none,none,"Zunächst müssen wir uns etwas anschauen, wie Datensätze und eine Datenbank überhaupt aufgebaut sind. Wir sind zwar sehr damit vertraut, Tabellen zu erstellen, als Datenbank taugen die meisten jedoch selten etwas. Datenbanken, bzw. einzelne Datensätze erstellt man mit einigen wenigen, einfachen Regeln, die wir nun kennen lernen wollen – danach sehen auch die meisten Tabellen besser aus. Außerdem lernen wir noch ein wenig hilfreiches, und Datenbank bezogenen Vokabular kennen. ",https://vimeo.com/606263968,https://youtu.be/-8xz6yr5kB0,,
Basic- Introduction to working with data using pandas ,3,2,"pandas: read_excel(), shape(), info, columns, set_option(›display.max_rows', 20), python: type() set_option('display.max_rows', 20), drop_duplicates(), df[›category name‹], >, <, &",11:24,Basics_Introduction_to_working_with_data_using_pandas.ipynb,Exercise_Basics_Introduction_to_working_with_data_using_pandas.ipynb,Solution_Basics_Introduction_to_working_with_data_using_pandas.ipynb,"Python selbst stellt nur einen sehr begrenzten Umfang an Befehlen zur Daten-Manipulation zur verfügung. Allerdings gibt es sehr viele zusätzliche Befehlspakete – genannt: libraries oder packages – für alles mögliche, auch eines zur Daten-Manipulation. Diese heißt (warum auch immer) ›pandas‹, und dessen Grundzüge lernen wir nun kennen. ",https://vimeo.com/606265047,https://youtu.be/yXb5HHuIuqk,,
Basics– Introduction to making a plot using matplotlib ,3,3,"read_csv(),  maptplotlib.pyplot, plt, plot(), scatter(), show(), xlabel(), legend(), xlim() ",10:49,Basics_Introduction_to_making_a_plot_using_matplotlib.ipynb,Exercise_Basics_Introduction_to_making_a_plot_using_matplotlib.ipynb,Solution_Basics_Introduction_to_making_a_plot_using_matplotlib.ipynb,"Eine weitere library ist die ›matplotlib‹, die praktische alle nur denkbaren Plots und deren noch so komplizierten Darstellungen ermöglicht. In diese nehmen wir nun einen ersten, kleinen Einblick. ",https://vimeo.com/607226446,https://youtu.be/WRpxCtj-g14,,
Basics- Selecting data using locations and indices ,3,4,".iloc(), .loc(),  .set_index() ",12:36,Basics_Selecting_data_using_locations_and_indices.ipynb,Exercise_Basics_Selecting_data_using_locations_and_indices.ipynb,Solution_Basics_Selecting_data_using_locations_and_indices.ipynb,"Nun wollen wir lernen, wie leicht mit Pandas jegliche gewünschten Daten aus einer Datenbank, also z.B. einer einfachen Excel-Tabelle extrahiert werden können. Das ist besonders wichtig und hilfreich, wenn die Datenbank sehr groß ist, oder wenn man immer andere Datenbanken verwendet, die aber immer anders aufgebaut sind. Anders aufgebaut meint, dass z.B. die Kategorienamen in anderer Reihenfolge stehen, oder evtl. auch etwas anders lauten. Dann müsste bei einem Code mit Pandas nur der entsprechende Kategoriename geändert werden, der Code selbst bliebe gleich. ",https://vimeo.com/609983778,https://youtu.be/p938Ji5BNEs,,
Basics- Plotting selected data ,3,5,none,03:03,Basics_Plotting_selected_data.ipynb,Exercise_Basics_Plotting_selected_data.ipynb,Solution_Basics_Plotting_selected_data.ipynb,"Zum Schluss dieser Einheit wollen wir die geballte Kraft von Pandas mit der von maplotlib kombinieren. D.h., wir selektieren zunächst mit Pandas die gewünschten Daten aus einer Datenbank, und visualisieren diese umgehend und einfach mit Hilfe der matplotlib Bibliothek. ",https://vimeo.com/610036139,https://youtu.be/zbUv3SuEvS8,,
Basics-  local & global variables ,4,1,global ,05:05,Basics_local_global_variables.ipynb,Exercise_Basics_local_global_variables.ipynb,Solution_Basics_local_global_variables.ipynb,"Lokale Variablen gelten nur innerhalb bestimmter Befehle. Das ist sehr praktisch, da derselbe Variablen-Name ohne Konflikte dann noch woanders verwendet werden kann. Globale Variablen gelten dagegen überall, sodass eine Doppelbelegung unbedingt vermieden werden muss. ",https://vimeo.com/610877259,https://youtu.be/M1bPtrpAhbM,,
Basics- Introduction to interactive elements ,4,2,"ipywidgets library, interact(), concatenate strings (+) ",09:24,Basics_Introduction_to_interactive_elements.ipynb,Exercise_Basics_Introduction_to_interactive_elements.ipynb,Solution_Basics_Introduction_to_interactive_elements.ipynb,"Interaktive Elemente erlauben es Anwendern die dargestellten Inhalte – also beispielsweise ein Diagramm – zu manipulieren, also damit zu interagieren. So können über Drop-Down Menüs z.B. die darzustellenden chemischen Elemente ausgewählt, oder über Slider Variablen-Werte verändert werden. Diese Elemente bilden eine GUI (graphical user interface), mit der sich richtige Programme erstellen lassen. ",https://vimeo.com/610891436,https://youtu.be/Dl9KGsf1_CY,,
"Command- if, elif, else ",4,3,"== (›test a condition‹),
 True, False",06:11,Command_if_elif_else.ipynb,Exercise_Command_if_elif_else.ipynb,Solution_Command_if_elif_else.ipynb,"Oftmals sollen unterschiedliche Dinge ausgeführt oder dargestellt werden, je nachdem was für eine Bedingung erfüllt ist. Wird etwa ein bestimmter Messwert unterschritten (die Bedingung), kann als Ausgabe erfolgen ›below detection limit‹. Eine Bedingung kann auch der Input eines Anwenders sein, der z.B. auswählen kann, ob auf der x-Achse die Einheit in wt% oder wt-ppm dargestellt werden soll. Bedingungen sind sehr häufig, und dieser Befehl entsprechend wichtig. ",https://vimeo.com/610906017,https://youtu.be/EwDaGK-nlgI,,
Program- Visualising data from various databases ,4,4,none,14:47,Program_Visualising_data_from_various_databases.ipynb,Exercise_Program_Visualising_data_from_various_databases.ipynb,Solution_Program_Visualising_data_from_various_databases.ipynb,"Nun wollen wir einmal möglichst viel des bisher Gelernten anwenden und um schickes Programm zu bauen, mit dem auf verschiedene Datenbanken zugreifen und deren Inhalt wie gewünscht –  also Element aussuchen, Einheit festlegen – darstellen können.   ",https://vimeo.com/610953138,https://youtu.be/EyYYi2VCb0g,,
Task- Plotting normalised REE from a database ,4,5,".pop(), .dropna(), .T, .yscale(log) ",06:15,none,none,Solution_Task_Plotting_normalised_REE_from_a_database.ipynb,"Seit einiger Zeit sollte klar werden, dass das bisher Gelernte mit den üblichen Programmen zur Analyse und Darstellung von Daten immer schwieriger würde, vor allem wenn schnell und flexibel gestaltet werden soll. Und natürlich ist das erst der Anfang. In dieser Aufgabe sollst Du erfahren, wie sehr wir uns bald auf die Ergebnisse, und weniger auf den Weg dahin konzentrieren können. Im Video werden ein paar Sachen dargestellt, dann sollst Du selbst versuchen, den unten gezeigten Plot normiert, bzw. nicht normiert darzustellen, d.h., das Programm dafür zu schreiben. ",https://vimeo.com/610983241,https://youtu.be/zTn6HiK_0Sc,,
Basics- Welche online-Datenbanken u.ä. gibt es? ,5,1,none,04:39,none,none,none,"Um 2000 herum begannen ein paar erste Initiativen damit mineralogische Datenbanken aufzubauen. Zu den Pionieren gehören sicherlich die GeoROC Datenbank am Max-Planck Institut für Geochemie in Mainz, die EarthChem Datenbank am Lamont-Doherty Earth Observatory, sowie die MetBase, welche von einem privaten Enthusiasten aufgebaut wurde. Die ersten beiden Datenbanken enthalten primär Gesteinsdaten, sind also geochemisch orientiert, wohingegen die MetBase eine kosmoschemische Datenbank mit Meteoriten-Daten ist. Zusätzlich gibt es Konsortien (NFDI4Earth, Research Data Alliance, European Open Science Cloud (EOSC), die selbst keine Datenbanken betreiben, sondern Standards, Schnittstellen, etc. definieren, und einen zentralen Zugangspunkt zu den verschiedenen Datenbanken anbieten. Das gibt es außerdem nicht nur für Daten, sondern auch für Labore (EPOS) oder die Lehre. ",https://vimeo.com/613407782,https://youtu.be/JZ_CC1jo5jk,,
Basics- Dictionary – another type of list ,5,2,"{ }  (-> Dictionary brackets), pd.DataFrame() ",12:36,Basics_Dictionary_another_type_of_list.ipynb,Exercise_Basics_Dictionary_another_type_of_list.ipynb,Solution_Basics_Dictionary_another_type_of_list.ipynb,"Daten, die man sich aus online-Datenbanken zieht sind häufig in Listen des Typs Dictionary (z.B. json Formate). Dictionary sind schnell zugänglich und leicht verständlich nachdem wir nun Pandas DataFrames kenne – und können auch direkt in diese umformatiert werden. ",https://vimeo.com/613444692,https://youtu.be/WXv79tpor5s,,
Command- API requests ,5,3,"requests,  .get(), json, str() ",16:32,Command_API_requests.ipynb,Exercise_Command_API_requests.ipynb,Solution_Command_API_requests.ipynb,"Was ist eine API? Ein Application Programming Interface. Das sagt kaum mehr. Es ist eine Schnittstelle. Hilft vielleicht etwas. Angenommen, wir wollen die aktuellen Wetterdaten einer Stadt wissen. Dann können wir eine Anfrage (request) an einen Server stellen, und bekommen die Wetterdaten geliefert. Hört sich einfach an – und ist es tatsächlich auch. In dieser Einheit lernen wir also, wie wir sehr einfach Daten von einem Server in unser Jupyter Notebook laden, und dort darstellen, weiter verarbeiten, visualisieren, etc. können. ",https://vimeo.com/613622392,https://youtu.be/x571C3rJJM0,,
"Basics- Manipulating row, columns, filters (again), etc. using pandas ",5,4,"~filter, .isin(), .str.contains(), .index, .value_count(), .rename, export, .to_csv, .to_excel ",13:55,none,none,none,"In dieser zweiten Einheit zu Pandas lernen wir weitere Möglichkeiten um Daten in pandas dataframes zu manipulieren, zählen, exportieren, etc. Es macht jedoch keinen Sinn, in diesem Kurs den vollständigen Umfang von Pandas – oder jeglicher anderer Python-Bibliothek – darzustellen. Vielmehr sucht man sich je nach zu lösender Fragestellung die nötigen Befehle aus dem persönlichen Fundus plus der entsprechenden Recherche in den einschlägigen Ressourcen aus dem Internet zusammen. ",https://vimeo.com/644874401,https://youtu.be/i2fpkcdhUlU,,
Program- Analysing the Eu-anomaly ,5,5,none,16:40,Program_Analysing_the_Eu_anomaly.ipynb,Exercise_Program_Analysing_the_Eu_anomaly.ipynb,Solution_Program_Analysing_the_Eu_anomaly.ipynb,"Zum Abschluss der Einheit wollen wir ein konkretes Beispiel für Data Science anschauen. Die Eu- Anomalie kennen vermutlich alle – sonst schnell mal nachschauen, was das ist. Wie sie berechnet wird, wird jedoch im Video erklärt. Am Ende werden wir ein sehr kurzes Programm haben, mit dem sich (i) die Eu-Anomalie analysieren lässt, und das (ii) sehr flexibel ist, d.h. mit dem wir nun prinzipiell die Eu-Anomalie jeder beliebigen Datenbank analysieren können. ",https://vimeo.com/615832152,https://youtu.be/B_ZqQkq8pjY,,
Program-  Populate drop-down menus dynamically ,6,1,"os, listdir(), .endswith() ",14:45,Program_Populate_drop_down_menus_dynamically.ipynb,Exercise_Program_Populate_drop_down_menus_dynamically.ipynb,Solution_Program_Populate_drop_down_menus_dynamically.ipynb,"Interaktive Elemente werden dann besonders attraktiv, wenn die darzustellenden Daten, bzw. Dateien ähnlich sind. Dabei genügt es schon, wenn die Kategorienamen in Dateien dieseleben sind, deren Anordnung in den Dateien speilt keine Rolle. Dann wird es möglich, die Inhalte der bspw. Drop-Down Menüs automatisch befüllen zu lassen, um damit einen sehr viel höheren Grad der Flexibilität und dauerhaften Verwendbarkeit des Jupyter Notebooks zu erreichen. Prinzipiell wird es damit auch möglich Notebooks zu schreiben, die man immer verwendet – man passt dann nicht mehr das Notebook an, sondern einfach die darzustellenden Daten. Die Anforderungen dafür sind nicht sonderlich hoch, und es genügt dann, den Datensatz in den entsprechenden Ordner zu kopieren.",https://vimeo.com/645765991,https://youtu.be/m4y8YefNfNo,,
Program- Advanced matplotlib plotting ,6,2,"fig, ax, subplots(), .subplots_adjust(hspace = 0, wspace = 0), sharex, .set(xlabel = ), .xaxis.set_ticks_position(›both‹), .minorticks_on(), .tick_params(which = ›major‹, length = 7, width = 1, direction = ›in‹), .savefig()",18:30,Program_Advanced_matplotlib_plotting.ipynb,Exercise_Program_Advanced_matplotlib_plotting.ipynb,Solution_Program_Advanced_matplotlib_plotting.ipynb,"Jupyter Notebooks, bzw. Python können sehr gut verwendet werden um sehr gute, das bedeutet, sehr übersichtlich, aussagekräftige, und dabei auch komplexe Plots zu erstellen. Es ist praktisch alles möglich – wie meist bei Programmierung –, die Frage ist daher selten ob etwas geht, sondern nur wie das Gewünschte geht. Ich zeige hier ein paar wesentliche Möglichkeiten, welche häufig und typischer für die Mineralogie sind, und verweise sonst auf die tatsächlich diese Woche überarbeitete Dokumentationsseite von https://matplotlib.org, welche mit der Überarbeitung deutlich übersichtlicher und hilfreicher geworden ist (sieht also anders aus als im eben erst erstellten Video). Es lohnt sich schon deshalb, die Seite einmal zu besuchen, um zu sehen, was alles an Diagrammen überhaupt möglich ist. Außerdem zeige ich den Befehl, wie erstellte Abbildungen gespeichert werden können. ",https://vimeo.com/646069328,https://youtu.be/4IeEIDyDsgw,,
Program- Plotting geolocations using geopandas ,6,3,"geopandas, .read_file(), .plot(), .plot(ax = axis) .GeoDataFrame(), geometry, .points_from_xy() ",10:41,Program_Plotting_geolocations_using_geopandas.ipynb,Exercise_Program_Plotting_geolocations_using_geopandas.ipynb,Solution_Program_Plotting_geolocations_using_geopandas.ipynb,"Für uns ist es außerdem besonders interessant, Daten auf Karten darzustellen. Das gelingt mit dem ›geopandas‹ Package. Das ist nicht Teil von Anaconda, und muss zunächst installiert werden. Das gelingt auf dem Mac über das Terminal, und bei Windows über Suche nach ›anaconda prompt‹ und dann den Befehl ›conda install -c conda-forge geopandas‹. Ansonsten sollte es über die Anleitung auf https://geopandas.org gelingen. Ich zeige eine nur sehr grundlegende Möglichkeit, wie Daten dargestellt werden können. Es gibt tatsächlich auch hier eine unglaublich  breite Palette an Möglichkeiten, Daten auf Karten darzustellen. Zum Beispiel auch auf detaillierten, physischen, geographischen, etc. Karten, welche direkte interaktive Zoom- Möglichkeiten bieten und vieles mehr. Wenn das interessant ist, empfehle ich z.B. das sehr gute ›plotly‹ Package – welches wir z.B. auch auf metbase.org verwenden – es gibt natürlich noch sehr viel mehr und andere.",https://vimeo.com/646136818,https://youtu.be/79EtaHORhGk,,
"Task- Building a complex, interactive figure ",6,4,"dir(), .set_figheight(), .subplot2grid(shape = (3, 3), loc = (0, 0), colspan = 2), .split(), .tight_layout() ",11:26,none,Task_Building_a_complex_interactive_figure.ipynb,Solution_Task_Building_a_complex_interactive_figure.ipynb,"Zum Abschluss des Themas über die Möglichkeiten von Diagrammen und interaktiver Elemente soll vieles davon in einem komplexen, interaktiven Plot zusammengefasst werden. Das soll in einer Challenge erfolgen. D.h., ich stelle alle Elemente vor, um diesen komplexen, interaktiven Plot umzusetzen, bzw. zeige ich den Ansatz, wie das gehen könnte. Das Ergebnis soll dann in etwa so in der Abbildung aussehen. ",https://vimeo.com/647184941,https://youtu.be/U1KDPsTmvgw,,
Basics- Function plotting with the numpy package ,7,1,"numpy, .linspace(), .sin(), .log(), .power(), warnings ",09:45,Basics_Function_plotting_with_the_numpy_package.ipynb,Exercise_Basics_Function_plotting_with_the_numpy_package.ipynb,Solution_Basics_Function_plotting_with_the_numpy_package.ipynb,"Bislang haben wir Daten aus Datenbanken oder Datensätzen in Diagrammen dargestellt und ausgewertet. Letztlich sehen wir bei einer solchen Daten-Darstellung immer den letzten Zustand eines bestimmten Prozesses – oder, noch präziser formuliert: ein Prozess wird zu einem bestimmten Zeitpunkt eingefroren, und die Daten beschreiben diesen eingefrorenen Zustand. Ganz direkt trifft das bei einem Magmatit zu, der ja tatsächlich nichts anderes als gefrorenes Magma ist. Unser Ziel ist es, anhand der Daten des eingefrorenen Prozesses den Prozess des Magmas davor zu rekonstruieren. Das machen wir anhand von Modellen wie z.B. fraktionierte Kristallisation, aber auch Datierung, mit Hilfe einer eingefrorenen Isotopenzusammensetzung. Ein Prozess wird mit einer Gleichung beschrieben, welche über eine Funktion in einem Diagramm dargestellt wird. Dazu schauen wir uns an, wie man eine Funktion in Jupyter Notebooks darstellt. ",https://vimeo.com/648675256,https://youtu.be/aCY6PWt_TTU,,
Program- Rayleigh isotope fractionation ,7,2,.axhline() ,15:08,Program_Rayleigh_isotope_fractionation.ipynb,Exercise_Program_Rayleigh_isotope_fractionation.ipynb,Solution_Program_Rayleigh_isotope_fractionation.ipynb,"Nun wollen wir Funktionen verwenden, um damit die Rayleigh-Fraktionierung zu modellieren. ",https://vimeo.com/648742504,https://youtu.be/XAO-1sScj6c,,
Command- Linear Regression ,7,3,"scipy, .stats, linregress(), ",09:02,Command_Linear_Regression.ipynb,Exercise_Command_Linear_Regression.ipynb,Solution_Command_Linear_Regression.ipynb,"Wir haben die Daten-Darstellung kennen gelernt, die Modellierung, auch Einblicke in die Daten- Analyse erhalten – und natürlich gibt es ausgiebig Packages zu etwas statistischen Analysen. Beispielhaft möchte ich die lineare Regression zeigen, die wir sehr häufig in der analytischen Mineralogie verwenden. Von dort ausgehend lassen sich leicht Packages und Methoden für die eigenen Problemstellungen finden. Und letztlich sind Methoden wie die lineare Regression nichts anderes als Funktionen, welche nicht mehr programmiert werden müssen, sondern schon vorgefertigt in Packages heraus verwendet werden können. ",https://vimeo.com/649193240,https://youtu.be/hlwX59_7IG8,,
Command- Plot data points with error bars ,7,4,.errorbar() ,06:34,Command_Plot_data_points_with_error_bars.ipynb,Exercise_Command_Plot_data_points_with_error_bars.ipynb,Solution_Command_Plot_data_points_with_error_bars.ipynb,"Einer der wichtigsten Parameter der Analytik sind deren Fehler und Standardabweichung in allen Variation (intern, extern, long-term, etc.). Natürlich lassen sich Fehler einfach und mit hoher Granularität in Abbildungen darstellen. Auch Fehler-Umhüllende sind einfach darstellbar, auf die ich einmal nicht eingehen werde, sondern nur darauf, Fehlerbalken den Datenpunkten einfach hinzuzufügen. ",https://vimeo.com/649198160,https://youtu.be/1IIOp9qp56U,,
Erstellen eines GitHub Accounts,8,1,"GitHub, Account",05:13,none,none,none,"GitHub ist vermutlich die weitesten verbreitete Plattform zum Teilen offener Software (›open source‹). Vom kleinen Entwickler bis hin zu großen Firmen wie Apple, Microsoft, Facebook, etc. – offener Quellcode wird bei GitHub abgelegt. GitHub war so erfolgreich, dass es vor einiger Zeit von Microsoft übernommen wurde. Wir werden GitHub verwenden, um mit Streamlit arbeiten zu können.",https://vimeo.com/776918333,https://youtu.be/zfnPtcbdLug,,
Erstellen eines Streamlit Accounts,8,2,"Streamlit, Account",05:18,none,none,none,"Streamlit ist ein so genanntes ›Framework‹. Konkret ist Streamlit ein Python Framework, das heißt, mit Hilfe von Streamlit können mit Python Web-Applikationen erstellt werden. Framework bedeutet, dass mit Hilfe einfacher Python-Befehle komplexe, interaktive Web-Elemente erstellt werden können. Die Streamlit Webseite bietet außerdem umfangreiche und sehr einfache und komfortable Hilfeseiten. Zunächst brauchen wir jedoch einen Streamlit Account.",https://vimeo.com/776919452,https://youtu.be/tcn1-MwYkgk,,
Streamlit Apps mit stlite sharing,8,3,"Streamlit, Sliteshare",11:31,none,none,none,"stlite sharing ist eine Webseite, auf der sehr einfach ausprobiert werden kann, Streamlit Apps zu erstellen. Die Webseite ist nicht notwendigerweise geeignet, wirklich Streamlit Apps zu entwickeln oder zu erstellen, aber eine sehr hilfreiche, erste Seite, um Streamlit ein wenig kennen zu lernen. Mehr wollen wir zunächst auch nicht tun.",https://vimeo.com/776919452,https://youtu.be/EcEafEzeBz0,,